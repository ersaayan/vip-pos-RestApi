// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  MANUFACTURER
}

model User {
  id                        String                      @id @default(cuid())
  email                     String                      @unique
  name                      String?
  password                  String
  role                      Role
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  StockCart                 StockCart[]
  StockCartHistory          StockCartHistory[]
  PLatformOrderVerification PLatformOrderVerification[]
  Order                     Order[]
}

model Phone {
  id               String             @id @default(cuid())
  brand            String
  model            String
  name             String
  groupCode        String?
  stockCode        String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  stockCart        StockCart[]
  StockCartHistory StockCartHistory[]
}

model StockCart {
  id                 String        @id @default(cuid())
  phoneId            String
  caseBrand          String
  caseModelVariation String
  caseImage          String?
  title              String?
  description        String?
  barcode            String?
  cost               Float?
  quantity           Int?
  updatedBy          String?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  Phone              Phone         @relation(fields: [phoneId], references: [id])
  User               User?         @relation(fields: [updatedBy], references: [id])
  OrderDetail        OrderDetail[]
}

model StockCartHistory {
  id                 String   @id @default(cuid())
  phoneId            String
  caseBrand          String
  caseModelVariation String
  caseImage          String?
  title              String?
  description        String?
  barcode            String?
  cost               Float?
  quantity           Int?
  updatedBy          String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Phone              Phone    @relation(fields: [phoneId], references: [id])
  updatedByUser      User?    @relation(fields: [updatedBy], references: [id])
}

model PLatformOrderVerification {
  id           String   @id @default(cuid())
  kargoTakipNo String
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User     @relation(fields: [userId], references: [id])
}

model Order {
  id          String        @id @default(cuid())
  orderCost   Float
  userId      String
  status      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  User        User          @relation(fields: [userId], references: [id])
  OrderFiles  OrderFiles[]
  OrderDetail OrderDetail[]
}

model OrderDetail {
  id        String    @id @default(cuid())
  orderId   String
  stockCart String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Order     @relation(fields: [orderId], references: [id])
  StockCart StockCart @relation(fields: [stockCart], references: [id])
}

model OrderFiles {
  id        String   @id @default(cuid())
  orderId   String
  fileName  String
  fileType  String
  fileUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order    @relation(fields: [orderId], references: [id])
}
